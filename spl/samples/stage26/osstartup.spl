//loading idle into memory 
loadi(69,11);
//loading the boot module 
loadi(54,67);
loadi(55,68);

SP = (76)*512 -1 ;

call BOOT_MODULE;

// idle process 

PTBR = PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR = 10 ;

//Library
[PTBR+0] =  63;
[PTBR+1] = "0100";
[PTBR+2] =  64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] =  -1;
[PTBR+5] = "0000";
[PTBR+6] =  -1;
[PTBR+7] = "0000";

//Code
[PTBR+8]  = 69;
[PTBR+9]  = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";


[70*512]=[69*512+1];
SP=8*512;
[PROCESS_TABLE +  1 ] = 0;
[PROCESS_TABLE +  4 ] = RUNNING ;
[PROCESS_TABLE + 11 ] = 76;
[PROCESS_TABLE + 12 ] = 0 ;
[PROCESS_TABLE + 13 ] = 8*512 ;
[PROCESS_TABLE + 14 ] = PTBR;
[PROCESS_TABLE + 15 ] = PTLR;

[SYSTEM_STATUS_TABLE + 1] = 0;

ireturn ;

