alias functionNum R1;
alias currentPID R2;
alias word R3;
alias ret R6;

if(functionNum==3)then
   //Calling Acquire Terminal :-
   multipush(R0,R1,R2,R3,R4,R5,R6);
   R1=8;
   R2=currentPID;
   call MOD_0;
   multipop(R0,R1,R2,R3,R4,R5,R6);
   
   print word;
   
   //Calling release Terminal :-
   multipush(R0,R1,R2,R3,R4,R5,R6);
    R1=9;
   R2=currentPID;
   call MOD_0;
   ret=R0;
   multipop(R0,R1,R2,R3,R4,R5,R6);
   return;
endif;
if(functionNum==4)then
   //Calling Acquire Terminal :-
   multipush(R0,R1,R2,R3,R4,R5,R6);
   R1=8;
   R2=currentPID;
   call MOD_0;
   multipop(R0,R1,R2,R3,R4,R5,R6);
   //breakpoint;
   read;
  
  

   
   [PROCESS_TABLE + currentPID * 16 + 4]=WAIT_TERMINAL;
   multipush(R0,R1,R2,R3,R4,R5,R6);
   call MOD_5;
   multipop(R0,R1,R2,R3,R4,R5,R6);
    
    alias physicalPageNum R4;
    alias offset R5;
    
    physicalPageNum=[PTBR+2*(word/512)];
    offset=word%512;
    [physicalPageNum*512+offset]=[PROCESS_TABLE+(currentPID*16)+8]; //storing input buffer of process
    return;
endif;

   
   
