alias functionNum R1;
alias currentPID R2;

if(functionNum == 3)then //acquiredisk

  while([DISK_STATUS_TABLE]==1)do
     [PROCESS_TABLE+(currentPID*16)+4] = WAIT_DISK; 
       multipush(R0,R1,R2,R3,R4,R5,R6);
      call MOD_5;
      multipop(R0,R1,R2,R3,R4,R5,R6);
  endwhile;
     [DISK_STATUS_TABLE]=1;
     [DISK_STATUS_TABLE+4]=currentPID;
       return;
endif;

if(functionNum == 8)then //acquireterminal
   while(( [TERMINAL_STATUS_TABLE] ) == 1 )do
      [ (PROCESS_TABLE + ( currentPID* 16) ) + 4]=WAIT_TERMINAL;
      multipush(R0,R1,R2,R3,R4,R5,R6);
      call MOD_5;
      multipop(R0,R1,R2,R3,R4,R5,R6);
   endwhile;
   [TERMINAL_STATUS_TABLE]=1;
   [TERMINAL_STATUS_TABLE + 1]=currentPID;
   breakpoint;
   return;
endif;

if(functionNum == 9)then //release terminal
   if([TERMINAL_STATUS_TABLE + 1] == currentPID)then
      [TERMINAL_STATUS_TABLE]=0;
      alias count R6;
      count=0;
      while(count<16)do
        if([PROCESS_TABLE + ( count* 16) + 4]==WAIT_TERMINAL) then
           [PROCESS_TABLE + ( count* 16) + 4]=READY;
        endif;
        count=count+1;
      endwhile;
      
       R0=0;
       breakpoint;
       return;
       
    endif;
    R0=-1;
    return;
endif;
return;


