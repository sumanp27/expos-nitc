alias usersp R1;
usersp = SP;

alias pt R2;
pt = PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16;

[pt+9] = 7;
SP = [pt + 11]*512 -1;

PTBR = [pt + 14];
alias ret R3;
ret = [PTBR + 2*((usersp-1)/512)]*512 + (usersp-1)%512;

alias filedes R4;
filedes = [[PTBR + 2*((usersp-4)/512)]*512 + (usersp-4)%512];

alias buffer R5;
buffer = [[PTBR + 2*((usersp-3)/512)]*512 + (usersp-3)%512];

if(filedes==-1) then
	multipush(R1,R2,R3,R4,R5);
	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE +1];
	R3 = buffer;
	call MOD_4;
	multipop(R1,R2,R3,R4,R5);
	[ret] = 0;
else
	if((filedes<0) || (filedes>7)) then
		[ret]=-1;
		[pt + 9]=0;
		SP = usersp;
		ireturn;
	endif;
	alias restableentry R6;
	restableentry = [pt + 11]*512 + 496 + 2*filedes;
	if(([restableentry]==-1) || ([restableentry]!=FILE)) then
		[ret]=-1;
		[pt + 9]=0;
		SP = usersp;
		ireturn;
	endif;
	alias openfileentry R7;
	openfileentry = OPEN_FILE_TABLE + 4*[restableentry +1];
	alias inodeindex R8;
	inodeindex = [openfileentry];
	multipush(R1,R2,R3,R4,R5,R6,R7,R8);
	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE +1];
	R3 = inodeindex;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8);
	if(R0==-1) then
		[ret]=-1;
		[pt+9]=0;
		SP =usersp;
		ireturn;
	endif;
	alias Lseek R9;
	Lseek = [openfileentry +2];
	alias bufferaddr R10;
	bufferaddr=[PTBR + 2*(buffer/512)]*512 + buffer%512;
	if([openfileentry] == INODE_ROOT) then
		//breakpoint;
		if(Lseek == 480) then
			multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10); 
			R1 = 5;
			R2 = [SYSTEM_STATUS_TABLE +1];
			R3 = inodeindex;
			call MOD_0;
			multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
			[ret]=-2;
			SP = usersp;
			ireturn;
		endif;
		[bufferaddr]=[ROOT_FILE + Lseek];
		Lseek = Lseek +1;
		[openfileentry +2] = Lseek;
	else
		if(Lseek == [INODE_TABLE + 16*inodeindex + 2]) then
			multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10); 
			R1 = 5;
			R2 = [SYSTEM_STATUS_TABLE +1];
			R3 = inodeindex;
			call MOD_0;
			multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
			[ret]=-2;
			SP = usersp;
			ireturn;
		endif;
		multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10); 
		R1 = 2;
		R2 = [INODE_TABLE + 16*inodeindex + 8 + (Lseek/512)];
		R3 = Lseek%512;
		R4 = bufferaddr;
		call FILE_MANAGER;
		//breakpoint;
		multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
		Lseek = Lseek+1;
		[openfileentry + 2]=Lseek;
	endif;
	//breakpoint;
	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10); 
	R1 = 5;
	R2 = [SYSTEM_STATUS_TABLE +1];
	R3 = inodeindex;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
endif;
[pt + 9]=0;
[ret] =0;
SP = usersp;
ireturn;

